{"version":3,"sources":["Inventory.js"],"names":[],"mappingssourcesContent":["// import React, { useState } from \"react\"\r\n\r\n// // display for gold\r\n// // magic items\r\n// // general items\r\n// // weapons, armor   \r\n\r\n// /**\r\n//  * These should come from your database, I do not know what is the format \r\n//  * but I would expect it would like something like this, if not, then you just need\r\n//  * to reformat accordingly\r\n//  */\r\n// const magicalItemsList = [\r\n//     {\r\n//         id: \"1\",\r\n//         item: \"Staff\",\r\n//         goldAmount: 100\r\n//     },\r\n//     {\r\n//         id: \"2\",\r\n//         item: \"Rod\",\r\n//         goldAmount: 200\r\n//     },\r\n//     {\r\n//         id: \"3\",\r\n//         item: \"Weapon\",\r\n//         goldAmount: 500\r\n//     }\r\n// ]\r\n// export default function Inventory() {\r\n//     // Please read useState hook in React\r\n//     // Refefence reading: https://react.dev/reference/react/useState\r\n\r\n//     /**\r\n//      * Set your items for your dropdown selection\r\n//      */\r\n//     const [magicalItems, setMagicalItems] = useState(magicalItemsList);\r\n\r\n//     // You need this to be able to store the item selected and pass it to your database\r\n//     const [selectedMagicalItem, setSelectedMagicalItem] = useState('');\r\n//     const [goldAmount, setGoldAmount] = useState(0);\r\n\r\n//     // Manage your text input for adding new magical item\r\n//     const [newMagicalItem, setNewMagicalItem] = useState('');\r\n//     const [gold, setGold] = useState(0);\r\n\r\n//     // Manage show or hid alert\r\n//     const [alertStatus, setAlertStatus] = useState(\"mt-3 alert alert-success alert-dismissible fade hide\");\r\n//     /**\r\n//      * This will display all magical items\r\n//      * the KEY in the option is needed for react as a unique identifier\r\n//      */\r\n//     const magicalItemsSelection = magicalItems.map((magic) => {\r\n//         return <option key={magic.item} value = {magic.id} >\r\n//                 {magic.item}\r\n//             </option>\r\n//     });\r\n                                                                                       \r\n//     // Handle change in selection                                                                                       \r\n//     const handleMagicalSelection = (e) => {                                                                                       \r\n//         // Find the data on the magicalItems list                                                                                       \r\n//         const magicItem = magicalItems.find(i => i.id === e.target.value);                                                                                       \r\n//         if (magicItem) {                                                                                       \r\n//             setSelectedMagicalItem(magicItem);\r\n//             setGoldAmount(magicItem.goldAmount)\r\n//         }\r\n//     }\r\n    \r\n//     // Handle when user enters new item\r\n//     const handleNewMagicalItem = (e) =>{\r\n//         setNewMagicalItem(e.target.value);\r\n//     }\r\n\r\n//     // Handle when user enters the value of the new magical item\r\n//     const handleNewMagicalGoldAmount = (e) =>{\r\n//         setGold(e.target.value);\r\n//     }\r\n\r\n//     // Handle adding if magical item\r\n//     const handleSubmit = () => {\r\n//         if (!newMagicalItem) return;\r\n//         if (!gold) return;\r\n\r\n//         // Get the total length of the existing magical itemts\r\n//         const addMagicalItem = {\r\n//             id : magicalItems.length +1,\r\n//             item: newMagicalItem,\r\n//             goldAmount: gold\r\n//         }\r\n\r\n//         //Add the new magical item to the list\r\n//         setMagicalItems([...magicalItems, addMagicalItem])\r\n\r\n//         // Show Alert\r\n//         setAlertStatus(\"mt-3 alert alert-success alert-dismissible fade show\");\r\n//     }\r\n//     return(\r\n//         <div className=\"container\">\r\n//             <h1>Choose Magical Item</h1>\r\n//             <div className=\"row\">\r\n//                 <div className=\"col-md-6\">\r\n//                 <h2>Magical Items</h2>\r\n//                     <select onChange = {(e)=>handleMagicalSelection(e)} className=\"form-select\" aria-label=\"Select Magical Item\">\r\n//                         <option> Select Magical Item </option>\r\n//                         {magicalItemsSelection}\r\n//                     </select>\r\n//                 </div>\r\n\r\n//                 <div className=\"col-md-6\">\r\n//                     <h2>Gold</h2>\r\n//                     <input type = \"text\" value = {goldAmount} disabled />\r\n//                 </div>\r\n//             </div>\r\n//             <div className=\"mt-3 card col-6 p-3\">\r\n//                 <h3>Add Magical Item</h3>\r\n//                 <div className=\"mb-3\">\r\n//                     <label htmlFor=\"itemName\" className=\"form-label\">Item Name:</label>\r\n//                     <input onChange ={(e) => handleNewMagicalItem(e)} type=\"text\" className=\"form-control\" id=\"itemName\" required />\r\n//                 </div>\r\n//                 <div className=\"mb-3\">\r\n//                     <label htmlFor=\"goldAmountInput\" className=\"form-label\">Gold Amount:</label>\r\n//                     <input onChange ={(e) => handleNewMagicalGoldAmount(e)} type=\"number\" className=\"form-control\" id=\"goldAmountInput\" required />\r\n//                 </div>\r\n//                 <button onClick = {handleSubmit} className=\"btn btn-primary\">Add Magical Item Gold</button>\r\n//                 <div className = {alertStatus} role=\"alert\">\r\n//                     Magical Item Added\r\n//                     <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n"],"file":"Inventory.dev.js"}
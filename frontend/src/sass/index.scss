@use 'variables' as v;
@use 'forms';

.app {
    font-family: v.$font;
    background-color: v.$primary-color;
    min-height: 100vh;
    margin: 0;
}

.grid-container {
    padding: 1rem;

    h1 {
        text-shadow: v.$dark-shadow;
    }
}

.grid {
    margin: auto;
    background-color: v.$secondary-color;
    justify-content: center;
    flex-wrap: wrap;
    display: flex;
    padding: 2rem;
    width: 90%;
    height: 100%;
    gap: 2rem;
    box-shadow: v.$box-shadow inset;

    .newCharItem{
        width: 100%;
    }

    .charGridItem {
        display: flex;
        justify-content: center;
        width: 100%;
        min-height: 25rem;
        max-height: 25rem;
        padding: 1rem;
        background-color: v.$primary-color;
        box-shadow: v.$box-shadow;
        text-shadow: v.$dark-shadow;
        font-size: 2rem;

        .newCharItemText {
            text-align: center;
            margin: auto;
            font-size: 2rem;
        }

        .itemLink{
            width: 100%;

            .itemImage {
                max-width: 100%;
                max-height: 50%;
                min-height: 25%;
            }
        }
    }
}

.stats {
    font-size: large;
    color: white;
    text-shadow: v.$dark-shadow;
    text-align: center;

    h1 { margin-bottom: 20px; }

    h3 {
        padding: 0.5rem;
        box-shadow: v.$box-shadow;
        text-shadow: v.$dark-shadow;

        span { display: block; }
    }

    .genStats {
        display: grid;
        grid: 1fr / repeat(4, 1fr);
        gap: 2rem;
    }

    .other {
        display: grid;
        grid: 1fr / repeat(3, 1fr);
        gap: 1.5rem;
        margin-top: 1rem;
    }

    .baseStats {
        display: grid;
        grid: repeat(2, 1fr) / repeat(3, 1fr);
        gap: 1.5rem;
    }
}

.logo { height: 50px; }

.list-borders {
    li { border-bottom: 1px solid v.$primary-color; }
}

.primary { background-color: v.$primary-color; }

.primary-color { color: v.$primary-color; }

.secondary { background-color: v.$secondary-color; }

.secondary-color { color: v.$secondary-color; }

.tertiary { background-color: v.$tertiary-color; }

.tertiary-color { color: v.$tertiary-color; }

.center {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%) !important;
    min-width: 75%;
}

.spells {
    text-shadow: v.$dark-shadow;
    text-align: center;

    label {
        display: flex;
        justify-content: center;
        flex-direction: column;

        select {
            width: 50%;
            margin: auto;
            text-align: center;
        }
    }

    .saveAttack{
        display: grid;
        grid: 1fr / repeat(2, 1fr);
        gap: 2rem;
        text-align: center;

        p {
            font-size: 1.5rem;
            box-shadow: v.$box-shadow;
            text-shadow: v.$dark-shadow;
        }

        span { display: block; }
    }

    &Display {
        display: grid;
        grid: auto;
        gap: 1.5rem;
    }
}

.addSpellDisplay {
    max-height: 20rem;
    overflow-y: scroll;
}

a {
    text-decoration: none;
    color: white;

    &.active { text-shadow: v.$light-shadow; }
}

.characterView  {
    padding: 1rem 1rem 4.5rem;

    nav {
        background-color: v.$secondary-color;
        justify-content : space-around;
    }
}

.charNav {
    border-top: 1px solid v.$primary-color;
}

.overview {
    text-shadow: v.$dark-shadow;
    text-align: center;

    h2 { margin: 1rem; }

    span { display: block; }

    .genStats {
        display: grid;
        grid: 1fr / repeat(4, 1fr);
        gap: 2rem;

        h3 {
            padding: 0.5rem;
            box-shadow: v.$box-shadow;
            text-shadow: v.$dark-shadow;
        }
    }

    .baseStats {
        display: grid;
        grid: repeat(2, 1fr) / repeat(3, 1fr);
        gap: 1.5rem;
        text-align: center;

        h3 {
            padding: 0.5rem;
            box-shadow: v.$box-shadow;
            text-shadow: v.$dark-shadow;
        }
    }
}

.noteGallery {
    text-shadow: v.$dark-shadow;
    text-align: center;
}

.noteContainer {
    display: grid;
    gap: 1.5rem;

    .note {
        display: grid;
        grid: 'title . options'
        'desc desc desc';
        gap: 1rem;
        align-items: center;
        justify-content: space-between;
        padding: 1rem;
        box-shadow: v.$box-shadow;
        text-align: left;

        hr { margin-top: 0; }

        .title { grid-area: title; }
        .desc {
            grid-area: desc;

            pre {
                box-shadow: v.$box-shadow inset;
                padding: 1rem;
                font-family: v.$font;
            }
        }
        .options {
            grid-area: options;
            display: grid;
            grid: 1fr / repeat(2, 1fr);
            align-items: center;

            .button {
                width: 5rem;
                height: 2.5rem;
            }
        }
    }
}

.home {
    display: grid;
    gap: 1rem;
    grid: 'logo'
    'portraits'
    'text';

    text-shadow: v.$light-shadow;

    &-logo { grid-area: logo; }
    &-text { grid-area: text; }
    .portraits {
        grid-area: portraits;
        width: 100%;
        display: grid;
        grid: repeat(3, 1fr) / repeat(3, 1fr);
        gap: 1rem;

        img { width: 100%; }
    }
}

.inventoryContainer {
    text-align: center;
    text-shadow: v.$dark-shadow;

    .inventoryGrid {
        display: grid;
        grid: 1fr / repeat(3, 1fr);
        gap: 1.5rem;

        span { display: block };

        h2 {
            padding: 0.5rem;
            box-shadow: v.$box-shadow;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }
    }

    .items {
        display: grid;
        grid: 1fr / 1fr;
        gap: 1.5rem;
    }
}

.item {
    display: grid;
    grid: 'name . delete'
        'desc desc desc';
    padding: 1rem;
    justify-content: space-between;
    gap: 1rem;
    background-color: v.$secondary-color;
    text-shadow: v.$dark-shadow;
    box-shadow: v.$box-shadow;

    &Name { grid-area: name; }

    &Desc {
        grid-area: desc;
        text-align: left;

        hr { margin-top: 0; }

        p {
            padding: 1rem;
            max-height: 15rem;
            overflow-y: scroll;
        }
    }

    &Props {
        display: grid;
        grid: 1fr / repeat(3, 1fr);
        gap: 1rem;

        .type { grid-column: span 2; }
    }

    &Delete {
        grid-area: delete;
        width: 5rem;
        height: fit-content;
    }
}

.combatStats {
    display: grid;
    grid: repeat(2, 1fr) / repeat(3, 1fr);
    gap: 1.5rem;
    text-align: center;

    h3 {
        padding: 0.5rem;
        box-shadow: v.$box-shadow;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }
}

.weapons {
    display: grid;
    gap: 1.5rem;
}

.weapon {
    display: grid;
    grid: 'name name . damage'
    'props props props props';
    gap: 1rem;
    padding: 1rem;
    box-shadow: v.$box-shadow;

    .name { grid-area: name; }
    .damage { grid-area: damage; }
    .props {
        grid-area: props;

        hr { margin-top: 0; }
        
        &Display {
            display: flex;
            justify-content: flex-start;
            flex-wrap: wrap;
            gap: 1rem;
        }
    }
}

.spell {
    display: grid;
    grid: 'name . delete'
    'info info info'
    'desc desc desc';
    gap: 1rem;
    padding: 1rem;
    box-shadow: v.$box-shadow;
    align-items: center;

    hr { margin-top: 0; }

    .name { grid-area: name; }

    .info {
        grid-area: info;
        
        .text {
            display: grid;
            grid: repeat(2, 1fr) / repeat(2, 1fr);
            gap: 1rem;
        }

        h4 {
            padding: 1rem;
            box-shadow: v.$box-shadow inset;
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
            justify-content: space-between;
        }
    }

    .desc {
        grid-area: desc;

        .text {
            overflow-y: scroll;
            max-height: 15rem;
            padding: 1rem;
            text-align: left;
        }
    }

    .delete {
        grid-area: delete;
        width: 5rem;
        height: fit-content;
    }
}

.aboutGrid {
    display: grid;
    grid: 'game logo'
    'hr hr'
    'portraits players'
    'about about';
    gap: 1rem;
    width: 100%;
    align-items: center;
    text-shadow: v.$light-shadow;

    .hr { grid-area: hr; }

    .game {
        grid-area: game;
        width: 100%;
    }

    .about-logo {
        grid-area: logo;
        margin: auto;
        max-height: 15rem;
        max-width: 100%;
    }

    .portraits {
        grid-area: portraits;
        display: flex;
        justify-content: space-between;
        height: fit-content;

        img { width: 30%; }
    }

    .players { grid-area: players; }

    .about { grid-area: about; }
}

@media screen and (min-width: 850px) {
    .home {
        grid: 'logo logo'
        'text portraits'
        'text .';
    }
}

@media screen and (max-width: 550px) {
    .overview {
        .genStats {
            grid: repeat(2, 1fr) / repeat(2, 1fr);
            gap: 1rem;
        }

        .baseStats {
            grid: repeat(3, 1fr) / repeat(2, 1fr);
            gap: 1rem;
        }
        hr {
            margin-top: 20px;
        }
    }
    

    .stats {
        .genStats {
            grid: repeat(2, 1fr) / repeat(2, 1fr);
            gap: 1rem;
        }

        .baseStats {
            grid: repeat(3, 1fr) / repeat(2, 1fr);
            gap: 1rem;
        }

        hr {
            margin-top: 20px;
        }
    }

    .aboutGrid {
        grid: 'logo'
        'game'
        'hr'
        'portraits'
        'players'
        'about';

        .about-logo { height: 50px; }
    }
}
@use 'variables' as v;

.form-container {
  text-align: center;
  text-shadow: v.$dark-shadow;
}

.form {
  width: 100%;
  display: grid;
  gap: 1rem;
  box-sizing: border-box;

  fieldset {
    display: grid;
    border-top: 1px solid white;
    border-bottom: none;
    border-left: none;
    border-right: none;
    gap: 1rem;

    legend {
      float: none;
      font-size: 2rem;
      width: auto;
      padding: 1rem;
    }
  }

  label {
    display: flex;
    flex-direction: column;
    justify-content: center;
    width: 100%;
    padding: 0.5rem;
    box-sizing: border-box;
    background-color: v.$secondary-color;
    font-size: 1.5rem;
    text-shadow: v.$dark-shadow;
  }

  input[type='number'] { width: 2.5rem; }

  .traits {
    width: 100%;
    display: grid;
    grid: repeat(8, 1fr) / 1fr;
    gap: 1rem;
  }

  .base-stats, .saving-throws { grid: 1fr / 1fr 1fr; }

  input[type='checkbox']{
    display: inline;
    height: 1rem;
  }

  .saving-throws, .skills {
    label {
      text-align: center;
    }
  }

  .skills { grid: 1fr / 1fr; }

  .optional {
    .input {
      width: 100%;
      height: 1.5rem;
      font-size: 1rem;
    }
  }

  button[type='submit'] {
    width: 75%;
    margin: auto;
    padding: 1rem;
    font-size: 2rem;
  }

  .textarea {
    width: 100%;
  }
}

.grid-2 {
  grid: repeat(2, 1fr) / repeat(6, 1fr);

  .username, .password { grid-column: span 3; }
  
  .submit { grid-column: 2 / 6; }
}

.error {
  padding: 1rem;
  margin: 1rem 0;
  background-color: v.$error;
}

.modal-form {
  display: grid;
  grid: 1fr / repeat(4, 1fr);
  gap: 1rem;
  align-items: center;
  text-align: left;

  label {
    padding: 1rem;
    grid-column: span 3;
    gap: 1rem;

    input {
      display: block;
      width: 100%;
    }
  }

  button {
    height: fit-content;
    width: 5rem;
    margin: auto;
  }
}

.label {
  input[type="checkbox"] { visibility: hidden; }

  .checkbox {
    width: 2rem;
    height: 2rem;
    background-color: v.$primary-color;
    box-shadow: v.$box-shadow inset;

    &::after {
      content: "";
      display: none;
      position: relative;
      left: 0.75rem;
      top: 0.5rem;
      width: 0.5rem;
      height: 0.875rem;
      border: solid white;
      border-width: 0 0.25rem 0.25rem 0;
      -webkit-transform: rotate(40deg);
      -ms-transform: rotate(40deg);
      transform: rotate(40deg);
    }
  }

  input:checked ~ .checkbox {
    background-color: v.$tertiary-color;
    box-shadow: v.$light-box-shadow;

    &::after {
      display: block;
    }
  }

  input[type="number"]::-webkit-outer-spin-button,
  input[type="number"]::-webkit-inner-spin-button {
      -webkit-appearance: none;
      -moz-appearance: none;
      appearance: none;
      margin: 0;
  }
}

.input, .textarea {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  border-radius: 0;
  background-color: v.$primary-color;
  box-shadow: v.$inset-box-shadow;
  color: white;
  text-align: center;
  border: none;
  text-shadow: v.$dark-shadow;
  width: 100%;

  &:focus {
    outline: none;
    caret-color: white;
  }
}

.textarea {
  resize: none;
}